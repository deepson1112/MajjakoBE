# Generated by Django 5.1.4 on 2024-12-23 06:06

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('offers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderCustomization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('description', models.CharField(max_length=255)),
                ('quantity', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='OrderedFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cart_id', models.CharField(max_length=50, null=True)),
                ('quantity', models.IntegerField()),
                ('price', models.FloatField()),
                ('amount', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('receiver_name', models.CharField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='OrdersTaxDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('tax_rate', models.FloatField()),
                ('vendor_sub_total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=100)),
                ('payment_method', models.CharField(choices=[('PayPal', 'PayPal'), ('RazorPay', 'RazorPay'), ('Stripe', 'Stripe')], max_length=100)),
                ('amount', models.CharField(max_length=10)),
                ('status', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_intent_id', models.CharField(blank=True, max_length=255, null=True)),
                ('card_last4', models.CharField(blank=True, max_length=4, null=True)),
                ('card_brand', models.CharField(blank=True, max_length=50, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_email', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='VendorInvoices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_name', models.CharField(max_length=50)),
                ('subtotal', models.FloatField()),
                ('total_tax', models.FloatField(default=0.0)),
                ('grand_total', models.FloatField()),
                ('total_discount', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='VendorsOrders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.FloatField(default=0.0)),
                ('discounted_amount', models.FloatField(default=0.0)),
                ('addons_cost', models.FloatField(default=0.0)),
                ('total_tax', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=50)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('email', models.EmailField(max_length=50)),
                ('address', models.CharField(max_length=200)),
                ('country', models.CharField(blank=True, max_length=200)),
                ('state', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(max_length=200)),
                ('pin_code', models.CharField(max_length=10)),
                ('order_payment_code', models.TextField(blank=True, null=True)),
                ('total', models.FloatField()),
                ('tax_data', models.JSONField(blank=True, help_text="Data format: {'tax_type':{'tax_percentage':'tax_amount'}}", null=True)),
                ('total_data', models.JSONField(blank=True, null=True)),
                ('total_tax', models.FloatField()),
                ('delivery_charge', models.FloatField(blank=True, null=True)),
                ('tip', models.FloatField(default=0, null=True)),
                ('delivery_date', models.DateTimeField(default=datetime.datetime.now)),
                ('is_ordered', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('New', 'New'), ('Accepted', 'Accepted'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='New', max_length=15)),
                ('payment_method', models.CharField(max_length=25)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('loyalty_points_received', models.FloatField(default=0.0)),
                ('loyalty_program', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='loyalty_orders', to='offers.loyaltyprograms')),
            ],
        ),
    ]
